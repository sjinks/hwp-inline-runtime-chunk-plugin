name: Publish Package

on:
  release:
    types:
      - released
  workflow_dispatch:
    inputs:
      npm:
        default: "yes"
        description: Publish to NPM?
        required: true

env:
  NODE_VERSION: 14

jobs:
  prepare:
    name: Prepare the source code
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event.inputs.npm == 'yes'
    steps:
      - name: Checkout source
        uses: actions/checkout@v2.4.0
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Set up Node.js environment
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node modules
        uses: actions/cache@v2.1.7
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.NODE_VERSION }}-
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Run clean install
        run: npm ci

      - name: Create tarball
        run: npm pack

      - name: Save tarball
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: "*.tgz"
          retention-days: 1

  publish:
    name: Publish package
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        registry:
          - npm
        include:
          - registry: npm
            secret: NPM_TOKEN
            registry_url: https://registry.npmjs.org/
    steps:
      - name: Set up Node.js environment
        if: github.event_name == 'release' || github.event.inputs[matrix.registry] == 'yes'
        uses: actions/setup-node@v2.5.0
        with:
          registry-url: ${{ matrix.registry_url }}

      - name: Download tarball
        if: github.event_name == 'release' || github.event.inputs[matrix.registry] == 'yes'
        uses: actions/download-artifact@v2
        with:
          name: package

      - name: Publish package
        if: github.event_name == 'release' || github.event.inputs[matrix.registry] == 'yes'
        run: npm publish *.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets[matrix.secret] }}
