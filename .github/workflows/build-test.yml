name: Build & Test CI

on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      head_tag: ${{ steps.head_tag.outputs.head_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@dcd71f646680f2efd8db4afa5ad64fdcba30e748 # tag=v3.0.1

      - name: Retrieve tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Check if Git tag exists
        id: head_tag
        run: echo "::set-output name=head_tag::$(git tag --points-at HEAD)"
        if: startsWith(github.ref, 'refs/heads/')

  build:
    name: Build and test
    runs-on: ubuntu-latest
    needs: prepare
    if: "!contains(github.event.head_commit.message, '[ci skip]') && (!startsWith(github.ref, 'refs/heads/') || !needs.prepare.outputs.head_tag)"
    strategy:
      matrix:
        node_version: ['12', '14', '16']

    steps:
      - name: Check out the code
        uses: actions/checkout@dcd71f646680f2efd8db4afa5ad64fdcba30e748 # tag=v3.0.1

      - name: Set up Node.js environment
        uses: actions/setup-node@56337c425554a6be30cdef71bf441f15be286854 # tag=v3.1.1
        with:
          node-version: ${{ matrix.node_version }}
          cache: npm

      - name: Update npm
        run: npm i -g npm@latest

      - name: Clean install and test
        run: npm cit

  release:
    name: Prepare the release
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}

    steps:
      - name: Checkout
        uses: actions/checkout@dcd71f646680f2efd8db4afa5ad64fdcba30e748 # tag=v3.0.1

      - name: Fetch tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Get release description
        id: release_params
        run: |
          SUBJECT="$(git for-each-ref "${{ github.ref }}" --format="%(contents:subject)")"
          BODY="$(git for-each-ref "${{ github.ref }}" --format="%(contents:body)")"
          echo "::set-output name=subject::${SUBJECT}"
          echo "::set-output name=body::${BODY}"

      - name: Create a release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # renovate: tag=v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.REPOSITORY_ACCESS_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.release_params.subject }}
          body: ${{ steps.release_params.body }}
